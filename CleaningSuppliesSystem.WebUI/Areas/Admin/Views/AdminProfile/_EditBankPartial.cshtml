@model UpdateCompanyBankDto

<form id="updateCompanyBankForm" method="post" asp-area="Admin" asp-controller="AdminProfile" asp-action="UpdateBankProfile">
    <input type="hidden" asp-for="Id" />
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-6">
            <div class="mb-20">
                <label asp-for="BankName" class="form-label fw-semibold text-primary-light text-sm mb-8">
                Banka Adı <span class="text-danger-600">*</span>
                </label>
                <input asp-for="BankName" class="form-control radius-8" maxlength="100" placeholder="Örn: Ziraat Bankası" required />
                <span asp-validation-for="BankName" class="text-danger"></span>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="mb-20">
                <label asp-for="AccountHolder" class="form-label fw-semibold text-primary-light text-sm mb-8">
                Hesap Sahibi <span class="text-danger-600">*</span>
                </label>
                <input asp-for="AccountHolder" class="form-control radius-8" maxlength="100" placeholder="Hesap sahibi Adı Soyadı" required />
                <span asp-validation-for="AccountHolder" class="text-danger"></span>
            </div>
        </div>

        <div class="col-12">
            <div class="mb-20">
                <label asp-for="IBAN" class="form-label fw-semibold text-primary-light text-sm mb-8">
                    IBAN Numarası <span class="text-danger-600">*</span>
                </label>
                <input asp-for="IBAN" id="ibanInput" class="form-control radius-8" maxlength="32"
                       placeholder="TR00 0000 0000 0000 0000 0000 00"
                       oninput="formatIBAN(this)" required />
                <span asp-validation-for="IBAN" class="text-danger"></span>
                <div class="mt-2">
                    <small>IBAN numaranızı TR ile başlayacak şekilde giriniz</small>
                </div>
            </div>
        </div>

    </div>

    <div class="d-flex align-items-center justify-content-center gap-3 mt-24">
        <a href="@Url.Action("Index", "AdminProfile")" class="border border-danger-600 bg-hover-danger-200 text-danger-600 text-md px-56 py-11 radius-8">
            <i class="fas fa-times me-2"></i>İptal
        </a>
        <button type="button" onclick="updateCompanyBank()" id="submitButton" class="btn btn-primary border border-primary-600 text-md px-56 py-12 radius-8">
            <i class="fas fa-save me-2"></i>Kaydet
        </button>
    </div>
</form>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // IBAN input formatlama
        function formatIBAN(input) {
            // Önce boşlukları kaldır ve TR ile başlat
            let value = input.value.replace(/\s/g, '').toUpperCase();
            if (!value.startsWith('TR')) value = 'TR' + value.replace(/^TR/i, '');

            // TR dışındaki kısmı sadece rakam yap ve maksimum 26 rakam
            let prefix = value.substring(0, 2);
            let rest = value.substring(2).replace(/[^0-9]/g, '');
            if (rest.length > 26) rest = rest.substring(0, 26);

            value = prefix + rest;

            // 4’lü gruplara ayır (kullanıcıya gösterilen)
            let formatted = value.replace(/(.{4})/g, '$1 ').trim();

            // Data attribute ile ham değeri sakla
            input.dataset.rawValue = value; // backend'e gönderilecek ham değer
            input.value = formatted; // kullanıcıya gösterilen
        }

        // Sayfa yüklendiğinde DB’den gelen değeri boşluklu formatla
        window.addEventListener('DOMContentLoaded', () => {
            const ibanInput = document.getElementById('ibanInput');
            if (ibanInput && ibanInput.value) {
                formatIBAN(ibanInput);
            }
        });

        // Form submit edilirken input değerini ham değere çevir
        function updateCompanyBank() {
            const form = document.getElementById("updateCompanyBankForm");
            const theme = document.documentElement.getAttribute("data-theme");

            const ibanInput = form.querySelector('[name="IBAN"]');
            ibanInput.value = ibanInput.dataset.rawValue || ibanInput.value; // ham değeri gönder

            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            Swal.fire({
                title: "Banka Bilgileri",
                text: "Değişiklikler kaydedilsin mi?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Evet, kaydet!",
                cancelButtonText: "İptal",
                background: theme === "dark" ? "#1e1e2f" : "#fff",
                color: theme === "dark" ? "#fff" : "#000",
                allowOutsideClick: false,
                allowEscapeKey: false,
                allowEnterKey: false,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) form.submit();
            });
        }
    </script>
}
