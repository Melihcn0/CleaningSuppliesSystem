@model UpdatePromoAlertDto
@{
    ViewData["Title"] = "Ön Gösterim Güncelleme Sayfası";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<form id="updatePromoAlertForm" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Icon" class="form-label fw-semibold text-primary-light text-sm mb-8">
            İkon Seçin <span class="text-danger-600">*</span>
        </label>
        <select asp-for="Icon" class="form-control" required>
            <option value="" disabled selected>İkon Seçin</option>
            <option value="success">✅ Success</option>
            <option value="error">❌ Error</option>
            <option value="warning">⚠️ Warning</option>
            <option value="info">ℹ️ Info</option>
            <option value="question">❓ Question</option>
        </select>
        <span asp-validation-for="Icon" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <label asp-for="Title" class="form-label fw-semibold text-primary-light text-sm mb-8">
            Başlık <span class="text-danger-600">*</span>
        </label>
        <input asp-for="Title" class="form-control" maxlength="50" required />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <label asp-for="Description" class="form-label fw-semibold text-primary-light text-sm mb-8">
            Açıklama <span class="text-danger-600">*</span>
        </label>
        <textarea asp-for="Description" class="form-control" rows="3" maxlength="100" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <br />
    <button type="button" class="btn rounded-pill btn-warning-600 radius-8 d-inline-flex align-items-center btn-sm" onclick="updateSubCategory()">
        <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">update</span>
        Güncelle
    </button>
</form>
<script>
        function updateSubCategory() {
        const form = document.getElementById("updatePromoAlertForm");
        const theme = document.documentElement.getAttribute("data-theme");

        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }

        Swal.fire({
            title: "Ön gösterim güncellensin mi?",
            text: "Değişiklikleri onaylıyor musunuz?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Evet, güncelle!",
            cancelButtonText: "İptal",
            background: theme === "dark" ? "#1e1e2f" : "#fff",
            color: theme === "dark" ? "#fff" : "#000",
            reverseButtons: true,
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false,
            didOpen: () => {
            const confirmBtn = Swal.getConfirmButton();
            const cancelBtn = Swal.getCancelButton();

            const addHoverEffect = (btn, color) => {
                if (!btn) return;
                btn.style.transition = "all 0.3s ease";
                btn.addEventListener("mouseenter", () => {
                    btn.style.boxShadow = `0 4px 20px 0 ${color}80`;
                    btn.style.transform = "translateY(-2px)";
                });
                btn.addEventListener("mouseleave", () => {
                    btn.style.boxShadow = "none";
                    btn.style.transform = "translateY(0)";
                });
            };

            addHoverEffect(confirmBtn, "#3085d6");
            addHoverEffect(cancelBtn, "#ff4d4f");
        }
        }).then((result) => {
            if (result.isConfirmed) {
                form.submit();
            }
        });
    }
</script>

