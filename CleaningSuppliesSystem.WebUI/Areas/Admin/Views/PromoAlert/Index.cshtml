@model PagedResponse<ResultPromoAlertDto>
@{
    ViewData["Title"] = "Ön Gösterimler Sayfası";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    ViewData["PermanentDeleteUrl"] = "~/Admin/PromoAlert/PermanentDeletePromoAlert";
    ViewData["PermanentDeleteConfirmTitle"] = "Ön gösterim kalıcı olarak silinsin mi?";

}
<div class="card basic-data-table">
    @Html.AntiForgeryToken()
    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <h5 class="card-title mb-0 mt-1">Ön gösterim Listesi</h5>
        <div class="d-flex flex-wrap align-items-center gap-2 ms-auto md-0 mt-1">
            <a asp-action="CreatePromoAlert" asp-controller="PromoAlert" asp-area="Admin" class="btn rounded-pill btn-info-600 radius-8 d-inline-flex align-items-center">
                <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">add</span> Yeni Ön Gösterim Ekle
            </a>
        </div>
    </div>
    <div class="card-body">
        <!-- Filtreleme ve sayfa başına veri dropdown'u -->
        <div class="d-flex align-items-center mb-3 gap-3">
            <!-- Arama label + input -->
            <div class="d-flex align-items-center">
                <label for="customSearch" class="me-3">Ara :</label>
                <input type="text" id="customSearch" class="form-control" placeholder="Ara..." style="width: 200px;" />
            </div>

            <!-- Sayfa başına dropdown -->
            <div class="d-flex align-items-center">
                <label for="pageSizeSelect" class="me-3">Sayfa başına :</label>
                <select id="pageSizeSelect" class="form-select w-auto select-balanced">
                    @foreach (var size in new int[] { 10, 30, 50, 100 })
                    {
                        if (Model.PageSize == size)
                        {
                            <option value="@size" selected>@size</option>
                        }
                        else
                        {
                            <option value="@size">@size</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="table-responsive" style="overflow-y: hidden;">
            <table class="table table-hover mb-0" id="dataTable" style="width: 100%;">
                <thead>
                    <tr>
                        <th class="text-start no-sort">#</th>
                        <th>Ön Gösterim Seti</th>
                        <th class="no-sort">Oluşturma | Son Güncelleme Tarihleri</th>
                        <th class="no-sort">Ana Sayfada | Durum</th>
                        <th class="no-sort">İşlem</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Data)
                    {
                        <tr>
                            <td></td>
                            <td><b><u>@item.Icon - @item.Title - @item.Description</u></b></td>
                            <td>
                                <div class="d-flex flex-column gap-1">
                                    <span>
                                        🟢 <b>Oluşturma:</b>
                                        @item.CreatedDate.ToString("dd.MM.yyyy HH:mm")
                                    </span>
                                    <span>
                                        🟡 <b>Güncelleme:</b>
                                        @(item.UpdatedDate != null
                                            ? item.UpdatedDate.Value.ToString("dd.MM.yyyy HH:mm")
                                            : "Henüz güncelleme yapılmadı")
                                    </span>
                                </div>
                            </td>
                            <td class="text-center align-middle">
                                <div class="d-flex flex-nowrap gap-2 align-items-center justify-content-center">
                                    @if (item.IsShown)
                                    {
                                        <span class="badge text-sm fw-semibold bg-dark-success-gradient px-20 py-9 radius-4 text-white">Gösteriliyor</span>
                                    }
                                    else
                                    {
                                        <span class="badge text-sm fw-semibold bg-dark-danger-gradient px-20 py-9 radius-4 text-white">Gösterilmiyor</span>
                                    }
                                    <form method="post" asp-action="ToggleStatus" asp-controller="PromoAlert" id="toggleForm-@item.Id" class="d-inline-block">
                                        <input type="hidden" name="promoAlertId" value="@item.Id" />
                                        <input type="hidden" name="newStatus" id="newStatus-@item.Id" value="@item.IsShown.ToString().ToLower()" />
                                        <div class="form-switch">
                                            <input class="form-check-input @(item.IsShown ? "bg-success-600" : "bg-danger-600")"
                                                   type="checkbox"
                                                   id="isShownSwitch-@item.Id"
                                                   name="isShown"
                                            @(item.IsShown ? "checked" : "")
                                                   onchange="onToggleChange(@item.Id)" />
                                        </div>
                                    </form>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex flex-nowrap gap-2">
                                    <a asp-action="UpdatePromoAlert" asp-controller="PromoAlert" asp-area="Admin" asp-route-id="@item.Id"
                                       class="btn rounded-pill btn-warning-600 radius-8 d-inline-flex align-items-center" title="Düzenle">
                                        <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">edit</span> Düzenle
                                    </a>
                                    <button class="btn rounded-pill btn-danger-600 radius-8 d-inline-flex align-items-center permanent-delete-btn"
                                            data-id="@item.Id" title="Sil">
                                        <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">delete</span> Sil
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-end my-1">
                    <ul class="pagination d-flex flex-wrap align-items-center justify-content-end" style="gap:2px;">
                        <!-- İlk sayfa -->
                        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px rounded-pill rounded-end-0"
                               href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="ep:d-arrow-left" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Önceki -->
                        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px"
                               href="@Url.Action("Index", new { page = Model.Page - 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="iconamoon:arrow-left-2-light" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Sayfa numaraları -->
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px @(i == Model.Page ? "bg-primary-600 text-white" : "")"
                                   href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                            </li>
                        }

                        <!-- Sonraki -->
                        <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px"
                               href="@Url.Action("Index", new { page = Model.Page + 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="iconamoon:arrow-right-2-light" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Son sayfa -->
                        <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px rounded-pill rounded-start-0"
                               href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">
                                <iconify-icon icon="ep:d-arrow-right" class="text-lg"></iconify-icon>
                            </a>
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('pageSizeSelect').addEventListener('change', function() {
            const pageSize = this.value;
            window.location.href = '@Url.Action("Index", "PromoAlert", new { area = "Admin" })?page=1&pageSize=' + pageSize;
        });

        function onToggleChange(id) {
            const checkbox = document.getElementById(`isShownSwitch-${id}`);
            const newStatusInput = document.getElementById(`newStatus-${id}`);
            newStatusInput.value = checkbox.checked.toString();
            document.getElementById(`toggleForm-${id}`).submit();
        }
    </script>
}