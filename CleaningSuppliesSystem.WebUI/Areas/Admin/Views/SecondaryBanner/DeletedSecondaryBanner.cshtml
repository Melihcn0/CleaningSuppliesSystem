@model List<ResultSecondaryBannerDto>
@{
    ViewData["Title"] = "İkincil Banner Sayfası";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    ViewData["PermanentDeleteUrl"] = "~/Admin/SecondaryBanner/PermanentDeleteSecondaryBanner";
    ViewData["PermanentDeleteConfirmTitle"] = "Bu öğeyi kalıcı olarak silmek istediğinize emin misiniz?";

    int count = 0;
}

<div class="card basic-data-table">
    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <h5 class="card-title mb-0">Silinen Banner Listesi</h5>
        <div class="d-flex align-items-center gap-2 ms-auto">
        </div>
    </div>
    <div class="card-body">
        @Html.AntiForgeryToken()
        <table class="table table-hover mb-0" id="dataTable" style="width: 100%; margin-top: 10px;">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>İkincil Banner Seti</th>
                    <th>Oluşturulma</th>
                    <th>Güncelleme</th>
                    <th>Silinme</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    count++;
                    <tr>
                        <td>@count</td>
                        <td>
                            <div class="d-flex flex-wrap justify-content-center align-items-start gap-4 py-3 text-center">
                                <!-- Kart -->
                                <div class="card shadow-sm" style="width: 180px;">
                                    <img src="@Url.Content(item.ImageUrl1)" class="card-img-top" style="height: 100px; object-fit: cover;" alt="Banner 1" />
                                    <div class="card-body p-3 d-flex flex-column gap-2 text-start">
                                        <p class="card-title mb-0">Başlık1 :</p>
                                        <p class="mb-0">@item.Title1</p>
                                        <p class="card-title mb-0">Açıklama1 :</p>
                                        <p class="mb-0">@item.Description1</p>
                                        <p class="card-title mb-0">Buton Adı1 :</p>
                                        <p class="mb-0">@item.ButtonTitle1</p>
                                    </div>
                                </div>

                                <div class="card shadow-sm" style="width: 180px;">
                                    <img src="@Url.Content(item.ImageUrl2)" class="card-img-top" style="height: 100px; object-fit: cover;" alt="Banner 2" />
                                    <div class="card-body p-3 d-flex flex-column gap-2 text-start">
                                        <p class="card-title mb-0">Başlık2 :</p>
                                        <p class="mb-0">@item.Title2</p>
                                        <p class="card-title mb-0">Açıklama2 :</p>
                                        <p class="mb-0">@item.Description2</p>
                                        <p class="card-title mb-0">Buton Adı2 :</p>
                                        <p class="mb-0">@item.ButtonTitle2</p>
                                    </div>
                                </div>

                                <div class="card shadow-sm" style="width: 180px;">
                                    <img src="@Url.Content(item.ImageUrl3)" class="card-img-top" style="height: 100px; object-fit: cover;" alt="Banner 3" />
                                    <div class="card-body p-3 d-flex flex-column gap-2 text-start">
                                        <p class="card-title mb-0">Başlık3 :</p>
                                        <p class="mb-0">@item.Title3</p>
                                        <p class="card-title mb-0">Açıklama3 :</p>
                                        <p class="mb-0">@item.Description3</p>
                                        <p class="card-title mb-0">Buton Adı3 :</p>
                                        <p class="mb-0">@item.ButtonTitle3</p>
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td>
                            @item.CreatedDate.ToString("dd.MM.yyyy HH:mm")<br />
                            @item.CreatedDate.ToString("dd MMMM yyyy dddd")
                        </td>
                        <td>
                            @(item.UpdatedDate.HasValue
                                ? Html.Raw(item.UpdatedDate.Value.ToString("dd.MM.yyyy HH:mm") + "<br />" + item.UpdatedDate.Value.ToString("dd MMMM yyyy dddd"))
                                : "Henüz güncellenmedi")
                        </td>
                        <td>
                            @item.DeletedDate?.ToString("dd.MM.yyyy HH:mm")<br />
                            @item.DeletedDate?.ToString("dd MMMM yyyy dddd")
                        </td>
                        <td>
                            <form asp-action="UndoSoftDeleteSecondaryBanner" asp-controller="SecondaryBanner" asp-area="Admin" asp-route-id="@item.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-outline-success-600 radius-8 d-inline-flex align-items-center me-2 action-btn">
                                    <span class="material-symbols-outlined">undo</span> Geri al
                                </button>
                            </form>

                            <button type="button" class="btn btn-outline-danger-600 radius-8 d-inline-flex align-items-center me-2 action-btn permanent-delete-btn"
                                    data-id="@item.Id">
                                <span class="material-symbols-outlined me-1">delete</span> Sil
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        const selectAll = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('.row-checkbox');

        if (selectAll) {
            selectAll.addEventListener('change', function () {
                checkboxes.forEach(cb => cb.checked = this.checked);
                toggleMultiDeleteUI();
            });
        }

        document.addEventListener('change', e => {
            if (e.target.classList.contains('row-checkbox')) {
                toggleMultiDeleteUI();
            }
        });

        function toggleMultiDeleteUI() {
            const selectedCount = document.querySelectorAll('.row-checkbox:checked').length;

            const undoBtn = document.getElementById('undosoftdeleteSelectedBtn');
            const permanentDeleteBtn = document.getElementById('permanentdeleteSelectedBtn');

            if (undoBtn) undoBtn.disabled = selectedCount === 0;
            if (permanentDeleteBtn) permanentDeleteBtn.disabled = selectedCount === 0;

            document.querySelectorAll('.action-btn').forEach(btn => {
                btn.disabled = selectedCount > 0;
                btn.style.pointerEvents = selectedCount > 0 ? 'none' : 'auto';
                btn.style.opacity = selectedCount > 0 ? '0.5' : '1';
            });
        }
    </script>
}
