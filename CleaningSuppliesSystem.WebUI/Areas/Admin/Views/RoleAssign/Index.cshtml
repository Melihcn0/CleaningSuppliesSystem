@model PagedResponse<UserListDto>
@{
    ViewData["Title"] = "Kullanıcı Listesi Sayfası";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<div class="card basic-data-table">
    @Html.AntiForgeryToken()
    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <h5 class="card-title mb-0">Kullanıcı Listesi</h5>
        <div class="d-flex align-items-center gap-2 ms-auto">
        </div>
    </div>
    <div class="card-body">
        <!-- Filtreleme ve sayfa başına veri dropdown'u -->
        <div class="d-flex align-items-center mb-2 gap-3">
            <!-- Arama label + input -->
            <div class="d-flex align-items-center">
                <label for="customSearch" class="me-3">Ara :</label>
                <input type="text" id="customSearch" class="form-control" placeholder="Ara..." style="width: 200px;" />
            </div>

            <!-- Sayfa başına dropdown -->
            <div class="d-flex align-items-center">
                <label for="pageSizeSelect" class="me-3">Sayfa başına :</label>
                <select id="pageSizeSelect" class="form-select w-auto select-balanced">
                    @foreach (var size in new int[] { 10, 30, 50, 100 })
                    {
                        if (Model.PageSize == size)
                        {
                            <option value="@size" selected>@size</option>
                        }
                        else
                        {
                            <option value="@size">@size</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="table-responsive" style="overflow-y: hidden;">
        <table class="table table-hover mb-0" id="dataTable" style="width: 100%; margin-top: 10px;">
            <thead class="table-light">
                <tr>
                    <th class="text-start no-sort">#</th>
                    <th>Ad Soyad | Kullanıcı Adı | Mail</th>
                    <th class="no-sort">Rol</th>
                    <th class="no-sort">Durum | İşlem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Data)
                {
                    <tr>
                        <td></td>
                        <td>@item.NameSurname - @item.UserName - @item.Email</td>
                        <td>
                            @foreach (var role in item.Role)
                            {
                                var badgeClass = role switch
                                {
                                    "Customer" => "bg-dark-dark-gradient",
                                    "Admin" => "bg-dark-info-gradient",
                                    "Developer" => "bg-dark-danger-gradient",
                                    _ => "bg-dark-warning-gradient"
                                };

                                var displayText = role switch
                                {
                                    "Customer" => "Müşteri",
                                    "Admin" => "Yetkili",
                                    "Developer" => "Geliştirici",
                                    _ => role
                                };

                                <span class="badge text-sm fw-semibold @badgeClass px-20 py-9 radius-4 text-white">@displayText</span>
                            }
                        </td>
                        <td class="text-center align-middle">
                        <div class="d-flex flex-nowrap gap-2 align-items-center justify-content-center">
                            @if (item.IsActive)
                            {
                                <span class="badge text-sm fw-semibold bg-dark-success-gradient px-20 py-9 radius-4 text-white">Aktif</span>
                            }
                            else
                            {
                                <span class="badge text-sm fw-semibold bg-dark-danger-gradient px-20 py-9 radius-4 text-white">Pasif</span>
                            }
                            <form method="post" asp-action="ToggleStatus" asp-controller="RoleAssign" id="toggleForm-@item.Id" class="d-inline-block">
                                <input type="hidden" name="userId" value="@item.Id" />
                                <input type="hidden" name="newStatus" id="newStatus-@item.Id" value="@item.IsActive.ToString().ToLower()" />

                                <div class="form-switch">
                                    <input class="form-check-input @(item.IsActive ? "bg-success-600" : "bg-danger-600")"
                                            type="checkbox"
                                            id="isActiveSwitch-@item.Id"
                                            name="isActive"
                                            @(item.IsActive ? "checked" : "")
                                            @(item.Role.Any(r => r == "Admin" || r == "Developer") ? "disabled" : "")
                                            onchange="onToggleChange(@item.Id)" />
                                </div>
                            </form>
                        </div>
                        </td>
                    </tr>
                }
            </tbody> 
        </table>
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-end my-1">
                    <ul class="pagination d-flex flex-wrap align-items-center justify-content-end" style="gap:2px;">
                        <!-- İlk sayfa -->
                        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px rounded-pill rounded-end-0"
                               href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="ep:d-arrow-left" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Önceki -->
                        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px"
                               href="@Url.Action("Index", new { page = Model.Page - 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="iconamoon:arrow-left-2-light" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Sayfa numaraları -->
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px @(i == Model.Page ? "bg-primary-600 text-white" : "")"
                                   href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                            </li>
                        }

                        <!-- Sonraki -->
                        <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px"
                               href="@Url.Action("Index", new { page = Model.Page + 1, pageSize = Model.PageSize })">
                                <iconify-icon icon="iconamoon:arrow-right-2-light" class="text-lg"></iconify-icon>
                            </a>
                        </li>

                        <!-- Son sayfa -->
                        <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link bg-primary-50 text-secondary-light fw-medium border-0 px-16 py-8 d-flex align-items-center justify-content-center h-40-px w-40-px rounded-pill rounded-start-0"
                               href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">
                                <iconify-icon icon="ep:d-arrow-right" class="text-lg"></iconify-icon>
                            </a>
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('pageSizeSelect').addEventListener('change', function() {
            const pageSize = this.value;
            window.location.href = '@Url.Action("Index", "RoleAssign", new { area = "Admin" })?page=1&pageSize=' + pageSize;
        });

                function onToggleChange(id) {
            const switchEl = document.getElementById(`isActiveSwitch-${id}`);
            const newStatusInput = document.getElementById(`newStatus-${id}`);
            const form = document.getElementById(`toggleForm-${id}`);

            newStatusInput.value = switchEl.checked;
            form.submit();
        }
    </script>
}