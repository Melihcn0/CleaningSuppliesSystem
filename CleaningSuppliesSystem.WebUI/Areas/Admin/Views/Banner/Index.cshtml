@model List<ResultBannerDto>

@{
    ViewData["Title"] = "Banner Yönetimi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    ViewData["DeleteFunction"] = "deletedBanner";
    ViewData["DeleteUrlPrefix"] = "/Admin/Banner/SoftDeleteBanner/";

    int count = 0;
}
<div class="card basic-data-table">
    @Html.AntiForgeryToken()
    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <h5 class="card-title mb-0 mt-1">Banner Listesi</h5>
        <div class="d-flex flex-wrap align-items-center gap-2 ms-auto md-0 mt-1">
            <a asp-action="CreateBanner" asp-controller="Banner" asp-area="Admin" class="btn rounded-pill btn-info-600 radius-8 d-inline-flex align-items-center">
                <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">add</span> Yeni Banner Ekle
            </a>
            <a asp-action="DeletedBanner" asp-controller="Banner" asp-area="Admin" class="btn btn-danger-600 radius-8 d-inline-flex align-items-center">
                <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">delete</span> Çöp Kutusu
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive" style="overflow-y: hidden;">
            <table class="table table-hover mb-0" id="dataTable" style="width: 100%;">
                <thead>
                    <tr>
                        <th class="text-start">#</th>
                        <th>Banner Seti</th>
                        <th>Oluşturma | Son Güncelleme Tarihleri</th>
                        <th>Ana Sayfada | Durum</th>
                        <th>İşlem</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        count++;
                        <tr>
                            <td>@count</td>
                            <td class="text-center">
                                <div class="d-flex flex-column align-items-center" style="max-width:600px; width:100%;">
                                    <!-- Banner + Card Wrapper -->
                                    <div class="d-flex flex-column w-100">
                                        <!-- Banner Görseli -->
                                        <div class="shadow-4 hover-scale-img overflow-hidden" style="border-top-left-radius:16px; border-top-right-radius:16px; height:160px;">
                                            <a href="@Url.Content(item.ImageUrl)"
                                               data-bs-toggle="modal"
                                               data-bs-target="#imageModal_@item.Id"
                                               class="w-100 h-100 d-block">
                                                <img src="@Url.Content(item.ImageUrl)"
                                                     class="w-100 h-100 object-fit-cover cursor-pointer hover-scale-img__img"
                                                     alt="Banner"
                                                     style="border-top-left-radius:16px; border-top-right-radius:16px;" />
                                            </a>
                                        </div>

                                        <!-- İstatistikler Card -->
                                        <div class="card w-100 shadow-sm radius-16" style="border-top-left-radius:0; border-top-right-radius:0; padding:12px; margin-top:-4px;">
                                            <div class="d-flex justify-content-around text-center flex-wrap">
                                                @if (!string.IsNullOrWhiteSpace(item.Statistic1Title))
                                                {
                                                    <div class="px-2 mb-2">
                                                        <div class="fw-bold">@item.Statistic1</div>
                                                        <small>@item.Statistic1Title</small>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrWhiteSpace(item.Statistic2Title))
                                                {
                                                    <div class="px-2 mb-2">
                                                        <div class="fw-bold">@item.Statistic2</div>
                                                        <small>@item.Statistic2Title</small>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrWhiteSpace(item.Statistic3Title))
                                                {
                                                    <div class="px-2 mb-2">
                                                        <div class="fw-bold">@item.Statistic3</div>
                                                        <small>@item.Statistic3Title</small>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrWhiteSpace(item.Statistic4Title))
                                                {
                                                    <div class="px-2 mb-2">
                                                        <div class="fw-bold">@item.Statistic4</div>
                                                        <small>@item.Statistic4Title</small>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Modal -->
                                <div class="modal fade" id="imageModal_@item.Id" tabindex="-1" aria-hidden="true"
                                     data-bs-backdrop="true" data-bs-keyboard="true" style="background-color: rgba(0,0,0,0.6);">
                                    <div class="modal-dialog modal-fullscreen m-0 p-0">
                                        <div class="modal-content bg-transparent border-0">
                                            <div class="modal-body p-0 d-flex justify-content-center align-items-center position-relative">
                                                <img src="@Url.Content(item.ImageUrl)" class="img-fluid rounded" alt="Preview" />
                                                <button type="button"
                                                        class="btn-close position-absolute"
                                                        data-bs-dismiss="modal" aria-label="Close"
                                                        style="top: 1rem; right: 2rem; width: 2.5rem; height: 2.5rem;"></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>

                            <td>
                                <div class="d-flex flex-column gap-1">
                                    <span>
                                        🟢 <b>Oluşturma:</b>
                                        @item.CreatedDate.ToString("dd.MM.yyyy HH:mm")
                                    </span>
                                    <span>
                                        🟡 <b>Güncelleme:</b>
                                        @(item.UpdatedDate != null
                                            ? item.UpdatedDate.Value.ToString("dd.MM.yyyy HH:mm")
                                            : "Henüz güncelleme yapılmadı")
                                    </span>
                                </div>
                            </td>
                            <td class="text-center align-middle">
                                <div class="d-flex flex-nowrap gap-2 align-items-center justify-content-center">
                                    @if (item.IsShown)
                                    {
                                        <span class="badge text-sm fw-semibold bg-dark-success-gradient px-20 py-9 radius-4 text-white">Gösteriliyor</span>
                                    }
                                    else
                                    {
                                        <span class="badge text-sm fw-semibold bg-dark-danger-gradient px-20 py-9 radius-4 text-white">Gösterilmiyor</span>
                                    }
                                <form method="post" asp-action="ToggleStatus" asp-controller="banner" id="toggleForm-@item.Id" class="d-inline-block">
                                    <input type="hidden" name="bannerId" value="@item.Id" />
                                    <input type="hidden" name="newStatus" id="newStatus-@item.Id" value="@item.IsShown.ToString().ToLower()" />
                                    <div class="form-switch">
                                        <input class="form-check-input @(item.IsShown ? "bg-success-600" : "bg-danger-600")"
                                               type="checkbox"
                                               role="switch"
                                               id="isShownSwitch-@item.Id"
                                               name="isShown"
                                               @(item.IsShown ? "checked" : "")
                                               onchange="onToggleChange(@item.Id)" />
                                    </div>
                                </form>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex flex-nowrap gap-2">
                                    <a asp-action="UpdateBanner" asp-controller="Banner" asp-area="Admin" asp-route-id="@item.Id"
                                       class="btn rounded-pill btn-warning-600 radius-8 d-inline-flex align-items-center" title="Düzenle">
                                        <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">edit</span> Düzenle
                                    </a>
                                    <button class="btn rounded-pill btn-danger-600 radius-8 d-inline-flex align-items-center delete-btn"
                                            data-id="@item.Id" title="Sil">
                                        <span class="material-symbols-outlined me-1 d-inline-flex align-items-center" style="font-size: 18px;">delete</span> Sil
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function onToggleChange(id) {
            const checkbox = document.getElementById(`isShownSwitch-${id}`);
            const newStatusInput = document.getElementById(`newStatus-${id}`);

            newStatusInput.value = checkbox.checked.toString();

            document.getElementById(`toggleForm-${id}`).submit();
        }

        const selectAll = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('.row-checkbox');

        if (selectAll) {
            selectAll.addEventListener('change', function () {
                checkboxes.forEach(cb => cb.checked = this.checked);
                toggleMultiDeleteUI();
            });
        }

        document.addEventListener('change', e => {
            if (e.target.classList.contains('row-checkbox')) {
                toggleMultiDeleteUI();
            }
        });

        function toggleMultiDeleteUI() {
            const selectedCount = document.querySelectorAll('.row-checkbox:checked').length;
            const deleteBtn = document.getElementById('deleteSelectedBtn');
            if (deleteBtn) deleteBtn.disabled = selectedCount === 0;

            document.querySelectorAll('.action-btn').forEach(btn => {
                btn.disabled = selectedCount > 0;
                btn.style.pointerEvents = selectedCount > 0 ? 'none' : 'auto';
                btn.style.opacity = selectedCount > 0 ? '0.5' : '1';
            });
        }

                document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.modal').forEach(function(modalEl){
                modalEl.addEventListener('click', function (e) {
                    const img = modalEl.querySelector('img'); // modal içindeki fotoğraf
                    // Eğer tıklanan fotoğraf değilse modal kapanacak
                    if (e.target !== img) {
                        const modalInstance = bootstrap.Modal.getInstance(modalEl);
                        modalInstance.hide();
                    }
                });
            });
        });
    </script>
}